<?php/* spiegazione funzionamento:gli devi passare la differenza, in secondi, tra una data nel passato e la data odierna.Per calcolarla puoi fare una cosa del genere:time() -strtotime($product->creationDate)oppure:time() -$session->lastActivityin questo modo ricaverai i secondi passati dalla creationDate.Puoi usare questa funzione anche per date nel futuro: in questo caso otterrai numeri negativi,e il tempo naturalmente andrà ad esaurirsi invece che aumentare.Per ottenere un numero positivo ti basta semplicemente usare substr(). Esempio:substr(getElapsedTime( time()-strtotime($product->expireDate) ), 1)così l'output troncherà il carattere -.*** EDIT 21/02/2012 ***Ho creato una nuova funzione per calcolare il tempo restante da oggi a una data futura. getRemainingTime($differenceInSeconds)*/function getElapsedTime ($seconds) {	$units = array(		31556926 => array('anno', 'anni'),		2629744 => array('mese', 'mesi'),		604800 => array('settimana', 'settimane'),		86400 => array('giorno', 'giorni'),		3600 => array ('ora', 'ore'),		60 => array('minuto', 'minuti'),		1 => array ('secondo', 'secondi')	);	foreach($units as $divisor => $unitName) {		$units = intval($seconds / $divisor);		if ($units) {			$seconds %= $divisor;			$name = $units == 1 ? $unitName[0] : $unitName[1];			if ($units > 0)					return "$units $name"; // ritorna tipo 4 settimane, oppure 2 giorni, e basta		}	}	return false;}